xnvmelib_source = [
  'xnvme_adm.c',
  'xnvme_be.c',
  'xnvme_be_fbsd.c',
  'xnvme_be_fbsd_dev.c',
  'xnvme_be_fbsd_nvme.c',
  'xnvme_be_fbsd_sync.c',
  'xnvme_be_linux.c',
  'xnvme_be_linux_async_libaio.c',
  'xnvme_be_linux_async_liburing.c',
  'xnvme_be_linux_async_ucmd.c',
  'xnvme_be_linux_block.c',
  'xnvme_be_linux_dev.c',
  'xnvme_be_linux_nvme.c',
  'xnvme_be_linux_hugepage.c',
  'xnvme_be_macos.c',
  'xnvme_be_macos_admin.c',
  'xnvme_be_macos_dev.c',
  'xnvme_be_macos_sync.c',
  'xnvme_be_nosys.c',
  'xnvme_be_posix.c',
  'xnvme_be_posix_admin.c',
  'xnvme_be_posix_async_aio.c',
  'xnvme_be_posix_async_emu.c',
  'xnvme_be_posix_async_nil.c',
  'xnvme_be_posix_async_thrpool.c',
  'xnvme_be_posix_dev.c',
  'xnvme_be_posix_mem.c',
  'xnvme_be_posix_sync.c',
  'xnvme_be_ramdisk.c',
  'xnvme_be_ramdisk_admin.c',
  'xnvme_be_ramdisk_dev.c',
  'xnvme_be_ramdisk_sync.c',
  'xnvme_be_spdk.c',
  'xnvme_be_spdk_admin.c',
  'xnvme_be_spdk_async.c',
  'xnvme_be_spdk_dev.c',
  'xnvme_be_spdk_mem.c',
  'xnvme_be_spdk_sync.c',
  'xnvme_be_vfio.c',
  'xnvme_be_vfio_admin.c',
  'xnvme_be_vfio_async.c',
  'xnvme_be_vfio_dev.c',
  'xnvme_be_vfio_mem.c',
  'xnvme_be_vfio_sync.c',
  'xnvme_be_windows.c',
  'xnvme_be_windows_async_iocp.c',
  'xnvme_be_windows_async_iocp_th.c',
  'xnvme_be_windows_dev.c',
  'xnvme_be_windows_fs.c',
  'xnvme_be_windows_mem.c',
  'xnvme_be_windows_nvme.c',
  'xnvme_buf.c',
  'xnvme_cmd.c',
  'xnvme_dev.c',
  'xnvme_file.c',
  'xnvme_geo.c',
  'xnvme_ident.c',
  'xnvme_lba.c',
  'xnvme_libconf.c',
  'xnvme_libconf_entries.c',
  'xnvme_nvm.c',
  'xnvme_opts.c',
  'xnvme_queue.c',
  'xnvme_req.c',
  'xnvme_spec.c',
  'xnvme_spec_pp.c',
  'xnvme_ver.c',
  'xnvme_znd.c',
  'xnvmec.c'
]

xnvmelib_deps = [
  thread_dep,
  rt_dep,
  math_dep,
  numa_dep,
  uuid_dep,
  execinfo_dep,
  elf_dep,
  aio_dep,
  setupapi_dep,
  spdk_nvme_dep,
  spdk_env_dpdk_dep,
  corefoundation_dep,
  iokit_dep,
  libvfn_dep,
  uring_dep,
]

xnvmelib = library(
  'xnvme',
  xnvmelib_source,
  dependencies: xnvmelib_deps,
  include_directories: [conf_inc, xnvme_inc, dpdk_inc],
  install_dir: xnvmelib_libdir,
  install: true,
)

# We create this as a target to be consumed by pkgconfig, potentially also for the xnvme-cli-tools,
# although they currently link "directly" to the regular static library
#xnvmelib_bundle_dep = declare_dependency(
#  dependencies: xnvmelib_deps,
#  link_args: conf_data.get('XNVME_BE_SPDK_ENABLED') ? [
#    '-Wl,--whole-archive',
#    '-Wl,--no-as-needed',
#    '-lxnvme',
#    '-Wl,--no-whole-archive',
#    '-Wl,--as-needed',
#  ] : [ '-lxnvme' ]
#)

# pkg-config -- describing how to consume the xNVMe library
pconf.generate(
  libraries: [xnvmelib_deps],
  version: meson.project_version(),
  variables: [
    'datadir=' + get_option('prefix') / get_option('datadir') / meson.project_name()
  ],
  name: 'xNVMe',
  filebase: 'xnvme',
  description : 'Libraries and tools for traditional and emerging I/O interfaces'
)
